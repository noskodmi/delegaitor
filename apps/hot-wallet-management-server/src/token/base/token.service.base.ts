/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Token as PrismaToken } from "@prisma/client";

export class TokenServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TokenCountArgs, "select">): Promise<number> {
    return this.prisma.token.count(args);
  }

  async tokens(args: Prisma.TokenFindManyArgs): Promise<PrismaToken[]> {
    return this.prisma.token.findMany(args);
  }
  async token(args: Prisma.TokenFindUniqueArgs): Promise<PrismaToken | null> {
    return this.prisma.token.findUnique(args);
  }
  async createToken(args: Prisma.TokenCreateArgs): Promise<PrismaToken> {
    return this.prisma.token.create(args);
  }
  async updateToken(args: Prisma.TokenUpdateArgs): Promise<PrismaToken> {
    return this.prisma.token.update(args);
  }
  async deleteToken(args: Prisma.TokenDeleteArgs): Promise<PrismaToken> {
    return this.prisma.token.delete(args);
  }
}
